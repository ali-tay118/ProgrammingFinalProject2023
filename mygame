import pickle

class Player: 
	def __init__(self):
		self.location = 'start'
		self.inventory = []

	def __str__(self):
		return f"Location:{self.location}\nInventory: {self.inventory}"

locations = {
	'start': {
		'description': 'You are in the middle of a dense forest. You have no idea how you got here, or where you are supposed to go. You are completely lost.',
		'exits': {'north': 'cave'},
		'objects': {'key': 'A shiny ley lies on the ground.'}
	},
	'cave': {
		'description': 'You are in a dark, damp cave. You can barely see anything, but you can hear the sound of running water nearby.',
		'exits': {'south': 'start', 'west': 'waterfall'},
		'objects': {'lantern': 'A lantern is hanging on the wall.'}
	},
	'waterfall': {
		'description': 'You are standing next to a large waterfall. The water is crashing down in front of you, making it impossible to see what is beyond.',
		'exits': {'east': 'cave'},
		'objects': {'door': 'There is a door behind the waterfall, but it seems to be locked.'}
	}
}

def save_game(player):
	with open('savegame.pkl', 'wb') as f:
		pickle.dump(player,f)
	print("Game saved.")

def load_game():
	try:
		with open('savegame.pkl','rb') as f:
			player = pickle.load(f)
			print("Game loaded.")
			return player
	except:
		print('No saved game found.')
		return None

def get_input():
	return input('> ').lower().split()

def play_game():
	player = load_game()
	if not player:
		player = Player()
	print('Lost in the Forest\n')
	while True:
		location = locations[player.location]
		print(location['description'])
		if location['objects']:
			for obj in location['objects']:
				print(location['objects'][obj])
		if location['exits']:
			print("Exits:",",".join(location['exits'].keys()))
		action = get_input()
		if action[0] == 'exit':
			save_game(player)
			break
		elif action[0] == 'inventory':
			print(player.inventory)
		elif action[0] == 'take':
			obj = action[1]
			if obj == 'key' and player.location == 'waterfall':
				player.location = 'treasure'
				print('You unlock the door and step through it.')
			else:
				print(f"You cannot use the {obj} here.")
		elif action[0] in location['exits']:
			player.location = location['exits'][action[0]]
		else:
			print('Invalid input. Type "exit" to quit the game.')
			continue

play_game()